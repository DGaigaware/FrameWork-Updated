package com.avaya.smgr.spm.settings;
//
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

import org.openqa.selenium.WebDriver;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import utility.UserAction;


public class Messaging{
	boolean b;
	UserAction action =null;
	Properties locator=null;
	Properties read=null;
	Properties input=null;
	public WebDriver driver;
@BeforeClass(alwaysRun=true)
public void setup() throws IOException, InterruptedException{
	action = new UserAction();
	locator=new Properties();
   	input=new Properties();
    locator.load(new FileInputStream(System.getProperty("user.dir") + "\\Third Party\\objectRepository\\OR.properties"));
    input.load(new FileInputStream(System.getProperty("user.dir") + "\\Third Party\\testData\\INPUT.properties"));
	action.login(input.getProperty("UserId"),input.getProperty("Password"),action);
   }
@BeforeMethod(alwaysRun=true)
public void ScreenshptSetup() throws IOException, InterruptedException{
}
@Test(description="Verify that the Edit and Done buttons are enabled",groups={"Sanity"})
public void MessagingEditDoneEnableBtn() throws Exception{
	action.RefreshPage();
	//1)Navigate to Configuration page, setting,Messaging 
	action.ClickLink(locator.getProperty("Configurations"));
	action.ClickLink(locator.getProperty("Settings"));
	action.ClickLink(locator.getProperty("Messaging"));
	action.ClickLink(locator.getProperty("Configuration"));
	action.SwithchFrame("iframe0");
	action.ClickButton(locator.getProperty("Edit"));
	action.WaitForTitle(locator.getProperty("Edit_Profile"));
	//Verification of Edit and Done buttons should be enable
	action.VerifyEnableButton(locator.getProperty("Edit"));
	action.VerifyEnableButton(locator.getProperty("Done"));
	boolean Accept=action.isAlertPresent();
	action.alert(Accept);
}
@Test(description="Verify that the commit and cancel buttons are enabled")
public void MessagingCommitCan() throws Exception{
	action.RefreshPage();
	//1)Navigate to Configuration page, setting,Messaging 
	action.ClickLink(locator.getProperty("Configurations"));
	action.ClickLink(locator.getProperty("Settings"));
	action.ClickLink(locator.getProperty("Messaging"));
	action.ClickLink(locator.getProperty("Configuration"));
	action.SwithchFrame("iframe0");
	action.ClickButton(locator.getProperty("Edit"));
	action.WaitForTitle(locator.getProperty("Edit_Profile"));
	//Verification of Commit and Cancel buttons should be enable
	action.VerifyEnableButton(locator.getProperty("Edit"));
	action.VerifyEnableButton(locator.getProperty("Done"));
	boolean Accept=action.isAlertPresent();
	action.alert(Accept);
	action.ClickButton(locator.getProperty("Done"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
}
	
@Test(description="Verify that the Showing/Hiding behaviour for the General Properties")
 public void MessagingGeneralPropMessageUI() throws Exception{
	action.RefreshPage();
	//1)Navigate to Configuration page, setting,Messaging 
	action.ClickLink(locator.getProperty("Configurations"));
	action.ClickLink(locator.getProperty("Settings"));
	action.ClickLink(locator.getProperty("Messaging"));
	action.ClickLink(locator.getProperty("Configuration"));
	action.SwithchFrame("iframe0");
	action.ClickButton(locator.getProperty("Edit"));
	action.WaitForTitle(locator.getProperty("Edit_Profile"));
	action.ClickButton(locator.getProperty("Edit"));
	 //2) Click on  the Show button for the General Properties
	action.ClickButton(locator.getProperty("GeneralProp"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	//3) Verify that  General Properties fields are hiding
    action.VerifyNoElementdisplay(locator.getProperty("Mesg.Gen.Record1"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
    //4) Click on  the hide  button 
	action.ClickButton(locator.getProperty("GeneralProp"));
    action.VerifyElementDisplay(locator.getProperty("Mesg.Gen.Record1"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	action.ClickButton(locator.getProperty("Done"));
    }
//Verification for the hiding/showing functionality under Telephony Properties
@Test(description="Verify that the Showing/Hiding behaviour for Telephony Properties")
public void MessagingTelephony() throws Exception{
	action.RefreshPage();
	//1)Navigate to Configuration page, setting,Messaging
	action.ClickLink(locator.getProperty("Configurations"));
	action.ClickLink(locator.getProperty("Settings"));
	action.ClickLink(locator.getProperty("Messaging"));
	action.ClickLink(locator.getProperty("Configuration"));
	action.SwithchFrame("iframe0");
	action.ClickButton(locator.getProperty("Edit"));
	action.WaitForTitle(locator.getProperty("Edit_Profile"));
	action.ClickButton(locator.getProperty("Edit"));
	  //2) Click on  the Expand  button for the Telephony properties
	action.ClickButton(locator.getProperty("IPOfficeProp"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
    //3) Verify that  Telephony Properties fields are not showing
	action.VerifyNoElementdisplay(locator.getProperty("Mesg.Record2"));
	action.VerifyNoElementdisplay(locator.getProperty("Mesg.Record3"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	 //4) Click on  the Expand  button 
	action.ClickButton(locator.getProperty("IPOfficeProp"));
    //5) Verify that  Telephony Properties fields are showing
	action.VerifyElementDisplay(locator.getProperty("Mesg.Record2"));
	action.VerifyElementDisplay(locator.getProperty("Mesg.Record3"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	action.ClickButton(locator.getProperty("Done"));
   }
//Verification of Collapse all functionality
@Test(description="Verify thate the Collapse functionality for the page")
public void MessagingCollapseAll() throws Exception{
	action.RefreshPage();
	//1)Navigate to Configuration page, setting,Messaging
	action.ClickLink(locator.getProperty("Configurations"));
	action.ClickLink(locator.getProperty("Settings"));
	action.ClickLink(locator.getProperty("Messaging"));
	action.ClickLink(locator.getProperty("Configuration"));
	action.SwithchFrame("iframe0");
	action.ClickButton(locator.getProperty("Edit"));
	action.WaitForTitle(locator.getProperty("Edit_Profile"));
	action.ClickButton(locator.getProperty("Edit"));
	 //2) Click on  the Collapse button 
	action.ClickButton(locator.getProperty("CollapseAll"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	//3) Verify that all fields are hiding
    action.VerifyNoElementdisplay(locator.getProperty("Mesg.Gen.Record1"));
  	action.VerifyNoElementdisplay(locator.getProperty("Mesg.Record2"));
	action.VerifyNoElementdisplay(locator.getProperty("Mesg.Record3"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	action.ClickButton(locator.getProperty("Done"));
   }
//Verification of expand all functionality for Messaging
@Test(description="Verify thate the Expand functionality for the page")
public void MessagingExpandAll() throws Exception{
	action.RefreshPage();
	//1)Navigate to Configuration page, setting,Messaging
	action.ClickLink(locator.getProperty("Configurations"));
	action.ClickLink(locator.getProperty("Settings"));
	action.ClickLink(locator.getProperty("Messaging"));
	action.ClickLink(locator.getProperty("Configuration"));
	action.SwithchFrame("iframe0");
	action.ClickButton(locator.getProperty("Edit"));
	action.WaitForTitle(locator.getProperty("Edit_Profile"));
	action.ClickButton(locator.getProperty("Edit"));
	 //2) Click on  the Collapse all button for the General Properties
	action.ClickButton(locator.getProperty("ExpandAll"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	//3) Click on  the hide  button 
	action.ClickButton(locator.getProperty("ExpandAll"));
	action.VerifyElementDisplay(locator.getProperty("Mesg.Gen.Record1"));
  	action.VerifyElementDisplay(locator.getProperty("Mesg.Record2"));
	action.VerifyElementDisplay(locator.getProperty("Mesg.Record3"));
	action.WaitForTitle(locator.getProperty("View_Profile"));
	action.ClickButton(locator.getProperty("Done"));
 }
@Test(description="Verify that the values are successfully change/override by an administrator and attribute successfully saved",groups={"Sanity"})
public void MessagingUpdate() throws Exception{
	action.RefreshPage();
	//Navigate to Configuration page, setting,Agent Management 
	action.ClickLink(locator.getProperty("Configurations"));
	action.ClickLink(locator.getProperty("Settings"));
	action.ClickLink(locator.getProperty("Messaging"));
	action.ClickLink(locator.getProperty("Configuration"));
	action.SwithchFrame("iframe0");
	action.ClickButton(locator.getProperty("Edit"));
	action.WaitForTitle(locator.getProperty("Edit_Profile"));
	//update the value from false to true in the Email forward field
	action.ClearText(locator.getProperty("Mesg.Record3"));
	action.entertext(locator.getProperty("Mesg.Record3"), input.getProperty("TwoDigitValue"));
	//Verify that the values are successfully change/override by an administrator and attribute successfully saved
	action.ClickButton(locator.getProperty("Commit"));
	boolean Accept=action.isAlertPresent();
	action.alert(Accept);
	action.VerifyElementValue(locator.getProperty("Mesg.Record3"), input.getProperty("TwoDigitValue"));
	action.ClickButton(locator.getProperty("Done"));
	action.WaitForTitle(locator.getProperty("SPMHome_Screen"));
}
@AfterMethod(alwaysRun=true)
public void Screenshots(ITestResult result) throws IOException, InterruptedException{
	  
	action.Screenshot(result, action);
}
@AfterClass(alwaysRun=true)
	public void Close() throws IOException, InterruptedException{
		action.logout(action);
	}
}
